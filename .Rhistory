library(askpass)
library(usethis)
use_git()
use_github()
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
use_github()
pacman::p_load(tidyverse,tiylog, shiny, flextable, magrittr,tmap,sf)
gh_adm2<-read_sf("data/gha_admin_shp/gha_admbnda_adm2_gss_20210308.shp")
tmap_mode("view")
tm_shape(gh_adm2)+tm_polygons()+tm_fill("ADM1_EN")
View(gh_adm2)
tm_shape(gh_adm2)+tm_polygons()+tm_fill()
wflow_build()
knitr::opts_chunk$set(echo = TRUE)
edu_facilities<-st_read("C:/Users/LENOVO/Documents/Ama_Owusu-Darko_RCode_sample/Ghana_educational_level/data/hotosm_gha_education_facilities_gpkg/hotosm_gha_education_facilities.gpkg")
pacman::p_load(tidyverse,tidylog, shiny, flextable,geocompkg, spData, spDataLarge, terra,tmap,sf, magrittr)
edu_facilities<-st_read("C:/Users/LENOVO/Documents/Ama_Owusu-Darko_RCode_sample/Ghana_educational_level/data/hotosm_gha_education_facilities_gpkg/hotosm_gha_education_facilities.gpkg")
names(edu_facilities)
#check names that are NA
summary(is.na(edu_facilities$name))
#check amenity that are NA
summary(is.na(edu_facilities$amenity))
#change to title case
edu_facilities$amenity<-str_to_title(edu_facilities$amenity)
edu_facilities$amenity<-if_else((str_detect(edu_facilities$name,
"Basic|Preparatory|Primary")),"Primary",edu_facilities$amenity)
#summary(edu_facilities$amenity)
edu_new<-edu_facilities |>
mutate(across(c(amenity),factor))|>
filter(!is.na(name),
!is.na(amenity))
#drop unused levels
edu_new%<>%
mutate(across(c(amenity),droplevels))
#summary(is.na(edu_new$name))
#summary(is.na(edu_new$amenity))
summary(edu_new$amenity)
#changing name of amenity level "school" to Primary 1-Secondary 12
#levels(edu_name_not_null$amenity)<- c("College","")
gh_adm2<-read_sf("data/gha_admin_shp/gha_admbnda_adm2_gss_20210308.shp")
tmap_mode("view")
map1=tm_shape(gh_adm2)+tm_polygons()+tm_fill(col="ADM1_EN")
map2=tm_shape(edu_new)+tm_symbols(size=0.1,col="amenity")
map1+map2
map2
map1+map2
tm_shape(gh_adm2)+tm_polygons(col="ADM1_EN")+tm_fill()
tm_shape(gh_adm2)+tm_polygons(col="ADM1_EN")
map1=tm_shape(gh_adm2)+tm_polygons(col="ADM1_EN")
map2=tm_shape(edu_new)+tm_symbols(size=0.1,col="amenity")
map1+map2
choose_region=function(x){
filter(gh_adm2,ADM1_EN==x)
}
choose_region("Greater Accra")
choose_school=function(x){
filter(edu_new,amenity==x)
}
choose_school("Primary")
tm_shape(choose_region("Greater Accra"))+tm_polygons(col="ADM1_EN")+
tm_shape( choose_school("Primary"))+tm_symbols(size=0.1,col="amenity")
inputPanel(
selectInput("n_breaks", label = "Number of bins:",
choices = c(10, 20, 35, 50), selected = 20),
sliderInput("bw_adjust", label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
)
renderPlot({
hist(faithful$eruptions, probability = TRUE, breaks = as.numeric(input$n_breaks),
xlab = "Duration (minutes)", main = "Geyser eruption duration")
dens <- density(faithful$eruptions, adjust = input$bw_adjust)
lines(dens, col = "blue")
})
summary(gh_adm2$ADM1_EN)
choices_reg=factor(gh_adm2$ADM1_EN)
levels(choices_reg)
runApp('Distribution_of_schools_in_Ghana')
runApp('Distribution_of_schools_in_Ghana')
